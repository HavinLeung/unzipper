package unzipper;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import net.lingala.zip4j.core.ZipFile;
import net.lingala.zip4j.exception.ZipException;

/**
 *
 * @author havinleung
 */
public class Unzipper extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Unzipper() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        OpenFileChooser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Unzipper"));

        OpenFileChooser.setText("Browse");
        OpenFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileChooserActionPerformed(evt);
            }
        });

        jLabel1.setText("File:");

        jTextField1.setEditable(false);

        jLabel2.setText("Minimum password characters:");

        jLabel3.setText("Maximum password characters:");

        jTextField2.setText("5");

        jTextField3.setText("10");

        jButton1.setText("Unzip!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OpenFileChooser)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenFileChooser)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileChooserActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
              jTextField1.setText(file.getAbsolutePath());
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_OpenFileChooserActionPerformed
/**/
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int start = 1;
        int end = 1;
        try{
            start = Integer.parseInt(jTextField2.getText());
            end = Integer.parseInt(jTextField3.getText());
            if(start>end){
                JOptionPane.showMessageDialog(new JFrame(), "Minimum size is larger than maximum size","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(start<1){
                JOptionPane.showMessageDialog(new JFrame(), "Password size must be greater than zero","Error",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(new JFrame(), "Password size must be an integer","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

        String filename = jTextField1.getText().toLowerCase();
        if(!filename.endsWith(".zip")){ //not a zip file
            JOptionPane.showMessageDialog(new JFrame(), "The file selected is not a ZIP file","Error",JOptionPane.ERROR_MESSAGE);            
            return;
        }
        //create a directory called unzipped
        String newfoldername = fileToFolder(filename)+"unzipped_folder";
        File newfolder = new File(newfoldername);
        
        //renaming method if directory name exists already
        int counter = 0;
        while(newfolder.exists()&&counter<100){
            counter++;
            newfolder = new File(newfoldername+"("+counter+")");
        }
        boolean success=newfolder.mkdir();
        if(counter!=0){
            newfoldername = newfoldername+"("+counter+")";
        }
        if(!success){
            JOptionPane.showMessageDialog(new JFrame(), "Failed to create folder \"unzipped_folder\"","Error",JOptionPane.ERROR_MESSAGE);            
            return;            
        }
        //brute force algorithm
        int unzipped = 0;
        for(int i=start;i<=end&&unzipped==0;i++){
            //initialise char array of i length
            char[] pw = new char[i];
            for(int j=0;j<i;j++){
                pw[j]=33;
            }
            while(unzipped==0){
            try{
                ZipFile zipfile = new ZipFile(filename);
                if(zipfile.isEncrypted()){
                    zipfile.setPassword(pw);
                    System.out.println(pw);
                }
                zipfile.extractAll(newfoldername);
                
                //output success and password
                String successmessage = "Success! The password is: ";
                String successmessage2 = String.copyValueOf(pw);
                successmessage += successmessage2;
                JOptionPane.showMessageDialog(new JFrame(), successmessage);
                unzipped=1;
                break;
            }catch(ZipException e){
                int hello = nextpw(pw,i-1, i-1); //if no password w/ current amount of characters
                if(hello==0){ //run out of possibilities
                    break;
                }
                continue;
            }
            }
        }
        
        if(unzipped==0){
            JOptionPane.showMessageDialog(new JFrame(), "Brute force failed!");
            //clean directory
            for(File file: newfolder.listFiles()) {
                if (!file.isDirectory()) {
                    file.delete();
                }
            }
            //delete directory
            newfolder.delete();
        }

                
    }//GEN-LAST:event_jButton1ActionPerformed

    public int nextpw(char[] pw, int last, int max){//generates next possible password
        while(pw[0]<=126){
            if(pw[last]==126){ //if current character is maxed out, move back to next character
                if(last==0){ //if first character is maxed out, all possibilities exhausted
                    return 0;
                }
                last--;
            }
            if(pw[last]<126){
                pw[last]+=1;
                for(int i = last+1; i<=max;i++){ //reset all characters past "last"
                    pw[i]=33; 
                }
                return 1; 
            }
        }
        return 0;
    }
        public String fileToFolder(String test) {
        //System.out.println(test);
        StringBuilder testing = new StringBuilder(test);
        int end = test.length()-1;
        int loop=1;
        int start=end;
        for(int i = end;i>=0&&loop==1;i--){
        	if(test.charAt(i)=='/'){
        		start = i;
        		loop = 0;
        	}
        }
        testing.delete(start+1,end+1);
        return testing.toString();
		//System.out.println(test);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Unzipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Unzipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Unzipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Unzipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Unzipper().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OpenFileChooser;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
